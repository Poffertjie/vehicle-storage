@using MudBlazor.Utilities
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@* Required *@
<MudThemeProvider IsDarkMode="true"/>
<MudPopoverProvider/>

@* Needed for dialogs *@
<MudDialogProvider/>

@* Needed for snackbars *@
<MudSnackbarProvider/>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1" >
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
                <MudText Typo="Typo.h5" Class="ml-3">Topaz Detailing</MudText>
                <MudSpacer/>
                <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End" OnClick="Logout"/>
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" >
                <NavMenu/>
            </MudDrawer>
            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.False">
                    @Body
                </MudContainer>
                <div id="blazor-error-ui">
                    An unhandled error has occurred.
                    <a href="" class="reload">Reload</a>
                    <a class="dismiss">🗙</a>
                </div>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <Authorizing>
        <p>Authorizing</p>
    </Authorizing>
    <NotAuthorized>
        <LoginRedirect />
    </NotAuthorized>
</AuthorizeView>


@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await ((CustomAuthStateProvider)AuthenticationStateProvider)
            .ClearTokenAsync();
        NavigationManager.NavigateTo("/login", true);
    }

}